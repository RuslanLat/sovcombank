"""add model

Revision ID: 72a8d94083ed
Revises: 
Create Date: 2023-11-10 16:42:29.928785

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '72a8d94083ed'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('addresse', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('addresse')
    )
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('position')
    )
    op.create_table('problems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_type', sa.Integer(), nullable=True),
    sa.Column('problem', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('lead_time', sa.String(), nullable=True),
    sa.Column('condition_one', sa.String(), nullable=True),
    sa.Column('condition_two', sa.String(), nullable=True),
    sa.Column('rank', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('problem'),
    sa.UniqueConstraint('problem_type')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product')
    )
    op.create_table('ranks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rank')
    )
    op.create_table('user_logins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('offices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('addresse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addresse_id'], ['addresses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('partner', sa.String(), nullable=True),
    sa.Column('data_connect', sa.String(), nullable=True),
    sa.Column('addresse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addresse_id'], ['addresses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('partner')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_login_id', sa.Integer(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_login_id'], ['user_logins.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partner_params',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('partner_id', sa.Integer(), nullable=True),
    sa.Column('delivered', sa.Boolean(), nullable=True),
    sa.Column('num_days', sa.Integer(), nullable=True),
    sa.Column('num_applications', sa.Integer(), nullable=True),
    sa.Column('num_cards', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('todo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('office_id', sa.Integer(), nullable=True),
    sa.Column('partner_id', sa.Integer(), nullable=True),
    sa.Column('problem_id', sa.Integer(), nullable=True),
    sa.Column('queue', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['partner_id'], ['partners.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('office_id', sa.Integer(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('rank_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rank_id'], ['ranks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_jobs')
    op.drop_table('todo')
    op.drop_table('partner_params')
    op.drop_table('users')
    op.drop_table('partners')
    op.drop_table('offices')
    op.drop_table('user_logins')
    op.drop_table('ranks')
    op.drop_table('products')
    op.drop_table('problems')
    op.drop_table('positions')
    op.drop_table('admins')
    op.drop_table('addresses')
    # ### end Alembic commands ###
